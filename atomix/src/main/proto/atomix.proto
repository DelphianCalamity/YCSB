syntax = "proto3";
package frontend;

option java_multiple_files = true;
option java_package = "site.ycsb.db.atomix";
option java_outer_classname = "AtomixProto";

service Frontend {
    rpc CreateKeyspace(CreateKeyspaceRequest) returns (CreateKeyspaceResponse);
    rpc StartTransaction(StartTransactionRequest) returns (StartTransactionResponse);
    rpc Get(GetRequest) returns (GetResponse);
    rpc Put(PutRequest) returns (PutResponse);
    rpc Delete(DeleteRequest) returns (DeleteResponse);
    rpc Abort(AbortRequest) returns (AbortResponse);
    rpc Commit(CommitRequest) returns (CommitResponse);
}

message Keyspace {
    string namespace = 1;
    string name = 2;
}

message StartTransactionRequest {
    Keyspace keyspace = 1;
}

message StartTransactionResponse {
    string status = 1;
    string transaction_id = 2;
}

message GetRequest {
    string transaction_id = 1;
    Keyspace keyspace = 2;
    bytes key = 3;
}

message GetResponse {
    string status = 1;
    optional bytes value = 2;
}

message PutRequest {
    string transaction_id = 1;
    Keyspace keyspace = 2;
    bytes key = 3;
    bytes value = 4;
}

message PutResponse {
    string status = 1;
}

message DeleteRequest {
    string transaction_id = 1;
    Keyspace keyspace = 2;
    bytes key = 3;
}

message DeleteResponse {
    string status = 1;
}

message AbortRequest {
    string transaction_id = 1;
}

message AbortResponse {
    string status = 1;
}

message CommitRequest {
    string transaction_id = 1;
}

message CommitResponse {
    string status = 1;
}

enum Cloud {
    AWS = 0;
    AZURE = 1;
    GCP = 2;
}

message Region {
    oneof cloud {
        Cloud public_cloud = 1;
        string other_cloud = 2;
    }
    string name = 3;
}

message Zone {
    Region region = 1;
    string name = 2;
}

message KeyRangeRequest {
    // If either is unspecified, that end is unbounded.
    bytes lower_bound_inclusive = 1;
    bytes upper_bound_exclusive = 2;
}

message CreateKeyspaceRequest {
    string namespace = 1;
    string name = 2;
    Zone primary_zone = 3;
    repeated KeyRangeRequest base_key_ranges = 5;
}

message CreateKeyspaceResponse {
    string keyspace_id = 1;
} 